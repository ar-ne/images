name: Build and Push Coder-Workspace Images

# only run on tag
on:
  push:
    #    branches:
    #      - main
    tags:
      - 'cw-v*'

env:
  REGISTRY: ghcr.io

jobs:
  cuda:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda:
          - 12.6.0
        distro:
          - ubuntu24.04
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 8

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./coder-workspace
          file: ./coder-workspace/cuda.Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/cuda:${{ matrix.cuda }}-${{ matrix.distro }}-${{ steps.short-sha.outputs.sha }}
          build-args: |
            cuda=${{ matrix.cuda }}
            distro=${{ matrix.distro }}

  miniconda-pre:
    name: miniconda-pre
    runs-on: ubuntu-latest
    strategy:
      matrix:
        conda:
          - 24.7.1-0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./coder-workspace
          file: ./coder-workspace/miniconda.Dockerfile
          push: false
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/miniconda:${{ matrix.conda }}
          target: pre-jb-ide
          build-args: |
            MINICONDA_VER=${{ matrix.conda }}
          cache-to: type=gha,mode=max
          cache-from: type=gha,mode=max


  build-miniconda:
    needs:
      - miniconda-pre
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      matrix:
        conda:
          - 24.7.1-0
        ide:
          - PCP
          - WS

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

# https://github.com/marketplace/actions/short-sha
      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 8

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./coder-workspace
          file: ./coder-workspace/miniconda.Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/miniconda:${{ matrix.conda }}-${{ matrix.ide }}-${{ steps.short-sha.outputs.sha }}
          build-args: |
            MINICONDA_VER=${{ matrix.conda }}
            IDE_CODE=${{ matrix.ide }}
          cache-from: type=gha,mode=max

  clean:
    runs-on: ubuntu-latest
    name: Delete old images
    steps:
      - uses: snok/container-retention-policy@v3.0.0
        name: Delete old MiniConda images
        with:
          account: ar-ne
          token: ${{ secrets.GITHUB_TOKEN }}
          image-names: "images/miniconda"
          cut-off: 1w
          dry-run: false
          keep-n-most-recent: 3
      - uses: snok/container-retention-policy@v3.0.0
        name: Delete old MiniConda images
        with:
          account: ar-ne
          token: ${{ secrets.GITHUB_TOKEN }}
          image-names: "images/cuda"
          cut-off: 1w
          dry-run: false
          keep-n-most-recent: 3